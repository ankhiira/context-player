apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: "androidx.navigation.safeargs.kotlin"

android {
    compileSdk 34

    defaultConfig {
        applicationId "com.gabchmel.contextmusicplayer"
        minSdkVersion 21
        targetSdkVersion 34
        versionCode 15
        versionName "1.3.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        signingConfig signingConfigs.debug
    }

    buildFeatures {
        // Enables Jetpack Compose for this module
        compose true
    }

    // Set both the Java and Kotlin compilers to target Java 17.
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }

    composeOptions {
        kotlinCompilerExtensionVersion '1.5.3'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            debuggable false
        }
    }

    flavorDimensions += "mode"
    productFlavors {
        debugVariant {
            dimension "mode"
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
            buildConfigField 'boolean', 'IS_DEBUG', 'true'
        }

        fullVariant {
            dimension "mode"
            applicationIdSuffix ".release"
            versionNameSuffix "-full"
            buildConfigField 'boolean', 'IS_DEBUG', 'false'
        }
    }

    android {
        testOptions {
            unitTests.includeAndroidResources = true
        }
    }
    namespace 'com.gabchmel.contextmusicplayer'
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])

    // Dependency on the other local modules
    implementation(project(':sensormodule'))
    implementation project(path: ':common')
    implementation project(path: ':predicitonmodule')

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'

    // Navigation
    def nav_version = "2.7.5"

    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    implementation "androidx.navigation:navigation-compose:$nav_version"

    implementation "androidx.core:core-splashscreen:1.1.0-alpha02"

    // Compose
    def compose_version = "1.5.4"
    implementation "androidx.compose.ui:ui:$compose_version"
    // Tooling support (Previews, etc.)
    implementation "androidx.compose.ui:ui-tooling:$compose_version"
    // Foundation (Border, Background, Box, Image, Scroll, shapes, animations, etc.)
    implementation "androidx.compose.foundation:foundation:$compose_version"

    implementation("androidx.compose.material3:material3:1.1.2")
    // Material Design
    implementation "androidx.compose.material:material:$compose_version"
    // Material design icons
    implementation "androidx.compose.material:material-icons-core:$compose_version"
    implementation "androidx.compose.material:material-icons-extended:$compose_version"
    // Integration with observables
    implementation "androidx.compose.runtime:runtime-livedata:$compose_version"
    implementation "androidx.compose.runtime:runtime-rxjava2:$compose_version"

    // Integration with activities
    implementation 'androidx.activity:activity-compose:1.8.1'
    // Integration with ViewModels
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.6.2'
    implementation "androidx.lifecycle:lifecycle-runtime-compose:2.6.2"

    def lifecycle_version = "2.5.1"
    implementation "androidx.lifecycle:lifecycle-process:$lifecycle_version"

    // Accompanist
    implementation("com.google.accompanist:accompanist-glide:0.11.1")

    def media3_version = "1.2.0"
    implementation "androidx.media3:media3-session:$media3_version"
    implementation("androidx.media3:media3-exoplayer:$media3_version")
    implementation "androidx.media3:media3-common:$media3_version"

    // WorkManager - Kotlin + coroutines
    implementation "androidx.work:work-runtime-ktx:2.8.1"

    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-guava:1.6.4")

    // For occurring error of duplicate library?
    implementation 'com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava'

    // For iterating through class properties
    implementation "org.jetbrains.kotlin:kotlin-reflect"

    // Preferences DataStore
    implementation "androidx.datastore:datastore-preferences:1.0.0"

    // UI Tests
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4:1.5.4'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation 'androidx.test:runner:1.5.2'
    androidTestImplementation 'androidx.test:rules:1.5.0'

    testImplementation 'androidx.test:core-ktx:1.5.0'
    testImplementation 'androidx.test.ext:junit-ktx:1.1.5'
}